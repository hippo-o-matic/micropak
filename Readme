Micropak, a basic header library for archiving files

All commands are stored under the "micropak" namespace, these include:

micropak::pack(std::string input_directory, std::string output_file, bool compress, std::vector<meta_entry>);
Packs the <input_directory> into an <output_file>, by default the directory's name. Also takes a vector of meta entries, which are pairs of values
you can store right in the archive. 

Example of a meta entry:
{name, value} | {"Author", "hippo"}

micropak::unpack(std::string input_file, std::string output_dir);
Unpacks the <input_file> to <output_dir>, by default the working directory. Returns a vector of meta_entries found

micropak::getVersion(std::string filename); | micropak::getVersion(std::fstream &stream);
Gets the version of the library the archive was packed with


This library includes support for compressing and decompressing archives on the fly using gzip-hpp (https://github.com/mapbox/gzip-hpp) made by mapbox. You can toggle the use of gzip-hpp by commenting out the

#define MICROPAK_USE_GZIP

line. If you use it, you will need to include gzip-hpp's header files.
Make sure these files are inside a folder named "gzip" in the root of your include path. 


This repo also comes with a minimalist example program, micropak.cpp. Simply compile with make.

Program usage: ./archiver <options>
-p <directory> 	                | Recursively packs all files in <directory> to -o <file>. Uses <directory>.mpak if -o <file> not given
-u <file> 			            | Unpacks an archive, <file>, using -o <directory> as it's root. Uses <file> as the name if -o <directory> not given
-o <file/directory>             | Outputs the result of -p or -u to <file/directory>
-m <name=content,name=content>  | Attaches given meta tag pairs, the name and content of each tag seperated by '=', and each pair seperated by ','
-v					            | Enables verbose mode, reports back what is being done for debugging purposes
--no-gzip 			            | Packs a file without gzipping it
-h, --help 		                | Displays this message :)"